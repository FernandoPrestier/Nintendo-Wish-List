
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$nintendo-wish-list-primary: mat.define-palette(mat.$indigo-palette);
$nintendo-wish-list-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$nintendo-wish-list-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$nintendo-wish-list-theme: mat.define-light-theme((
  color: (
    primary: $nintendo-wish-list-primary,
    accent: $nintendo-wish-list-accent,
    warn: $nintendo-wish-list-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($nintendo-wish-list-theme);

/* You can add global styles to this file, and also import other style files */

html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }

$red-nintendo : rgb(230, 0, 18);
$red-nintendo-hover : rgb(172, 0, 13);
$gray-nintendo-200 : rgba(218, 218, 218,0.5);
$gray-nintendo-200-200 : rgb(109, 109, 109);
$gray-nintendo-300 : rgb(114, 114, 114);
$gray-nintendo-400 : rgb(218, 218, 218);
$gray-nintendo-500 : rgb(239, 239, 239);
$gray-nintendo-600 : rgb(72, 72, 72);
$gray-nintendo-700 : rgb(36, 36, 36);
$shadow-variant-1: 0 0 10px rgba(72, 72, 72, 0.3);
$breakpoint-mobile : 1100px;

* {
    box-sizing: border-box;
}

.ml {
    margin-left: 0;

    &-10p {
        margin-left: 10px;
    }
    &-auto{
        margin-left: auto;
    }
}

.mr {
    margin-right: 0;

    &-20p {
        margin-right: 20px;
    }
    &-auto{
        margin-left: auto;
    }
}

.mt {
    margin-right: 0;

    &-48p {
        margin-top: 48px;
    }

    &-32p {
        margin-top: 32px;
    }

    &-99p {
        margin-top: 99px;
    }
}

.py {
    padding-top: 0;
    padding-bottom: 0;
    &-10p {
        padding-top: 10px;
        padding-bottom: 10px;
    }
}

.maxWidth90 {
    margin-left: auto;
    margin-right: auto;
    max-width: 90rem;
    width: 96%;
}

.maxWidth72 {
    margin-left: auto;
    margin-right: auto;
    max-width: 72rem;
    width: 96%;
}

@media only screen and (max-width: $breakpoint-mobile) {
    .maxWidth90 {
        width: 96%;
    }
}